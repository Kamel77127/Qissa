<?php

namespace App\Model;

use App\Core\Application;
use App\Repository\ProductRepository;

class ProductModel extends ProductRepository
{

    public string $name ='';
    public string|array $principalImage = '';
    public string $description = '';
    public ?float $price = null;
    public ?int $stock = null;
    public ?int $pages = null;
    public string $author = '';

    public string|array $img1 = '';
    public string|array $img2 = '';
    public string|array $img3 = '';
    public string|array $img4 = '';
    public string|array $img5 = '';

    public string $createdAt = '';
    public string $updatedAt = '';
    public ?string $deletedAt = null;



    public function tableName(): array
    {
        return ['products' , 'product_image'];
    }
    public function labels(): array
    {
        return [
            'name' => 'Titre du livre',
            'principalImage' => 'Image principal',
            'author' => 'auteur',
            'price' => 'prix',
            'img1' => 'image 1',
            'img2' => 'image 2',
            'img3' => 'image 3',
            'img4' => 'image 4',
            'img5' => 'image 5',

        ];
    }
    public function PrincipalData(): array
    {
        return [
            'name',
            'principalImage',
            'description',
            'price',
            'stock',
            'pages',
            'author',
            'createdAt',
            'updatedAt',
            'deletedAt',
        ];
    }

    public function imageData(): array
    {
        return [
          'img1',
          'img2',
          'img3',
          'img4',
          'img5'
        ];
    }

    public function rules(): array
    {
       return [
           'name' => [self::RULE_REQUIRED],
           'principalImage' => [self::RULE_FILES],
           'price' => [self::RULE_REQUIRED],
           'stock' => [self::RULE_REQUIRED],
           'author' => [self::RULE_REQUIRED],
           'pages' => [self::RULE_REQUIRED]
       ];
    }

    private function getImgFiles(): array
    {
        return [
          $this->principalImage,
          $this->img1,
          $this->img2,
          $this->img3,
          $this->img4,
          $this->img5
        ];
    }

    public function setCreatedAt()
    {
        $this->createdAt = date('d/m/Y H:i:s');
    }

    public function setUpdatedAt()
    {
        $this->updatedAt = date('d/m/Y H:i:s');
    }

    public function setDeletedAt()
    {
        $this->deletedAt = date('d/m/Y H:i:s');
    }

    public function save(): bool
    {
        Application::$app->files->moveFiles($this->getImgFiles() , '/public_html/assets/images_uploads/ProductImg/');
        return parent::save();
    }

    public function getAllProduct(int $min, int $max, string $deleted)
    {
        return parent::getAllProduct($min, $max, $deleted);
    }

    public function readProduct(int $id)
    {
        return parent::readProduct($id); // TODO: Change the autogenerated stub
    }

    public function getProductForUpdate(int $id)
    {
        return parent::getProductForUpdate($id); // TODO: Change the autogenerated stub
    }

    public function update(int $id): bool
    {
        Application::$app->files->moveFiles($this->getImgFiles() , '/public_html/assets/images_uploads/ProductImg/');
        return parent::update($id); // TODO: Change the autogenerated stub
    }

    public function delete(int $id, string $deletedAt): bool
    {
        return parent::delete($id, $deletedAt); // TODO: Change the autogenerated stub
    }

    public function countProducts()
    {
        return parent::countProducts();
    }
}